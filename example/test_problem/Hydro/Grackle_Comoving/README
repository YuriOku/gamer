Compilation flags:
========================================
Enable : MODEL=HYDRO, COMOVING, SUPPORT_GRACKLE
Disable: PARTICLE


Default setup:
========================================
1. Default resolution = 16^3
2. Uniform density = 1.0 (cosmic mean density)
3. Use the cloudy cooling table for H and He (GRACKLE_PRIMORDIAL = 0)
   --> Hydrogen's Lyman alpha cooling peak at 10^4 K disappears if non-equilibrium chemistry is used (GRACKLE_PRIMORDIAL > 0) due to the short cooling time compared to the equilibrium time scale.
4. Use the user-defined timestep criterion (OPT__DT_USER = 1)
   --> limit the timestep by the cooling time

Note:
========================================
1. This test problem computes the thermal evolution on comoving coordinate with the Grackle library
2. Run `make run` in `plot` directory to generate reference tables of cooling functions
   --> The C program `plot/coolingrate_proper.c` computes the cooling rate in the proper coordinate
3. Run `make plot` in `plot` directory to draw the cooling functions
   --> The python script `plot/Compute_CoolingCurve.py` computes the cooling rate from the simulation output and compares it with the reference table
4. The floating point precision of Grackle must be same with GAMER to compile the code successfully
5. Run the script `download_datatable.sh` to download the cooling rate table `CloudyData_noUVB.h5` from the Grackle GitHub repository
6. It is recommended to use double-float precision for the Grackle library
